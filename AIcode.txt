terminalBody.addEventListener('keydown', (event) => {
    if (event.key === 'Enter') {
        event.preventDefault();

        const currentInput = event.target;
        currentInput.contentEditable = false;

        // Get the full command text and split it into parts
        const commandText = currentInput.textContent.trim();
        const commandParts = commandText.split(' ');
        const command = commandParts[0].toLowerCase(); // Command is the first part
        const argument = commandParts[1]; // Argument (the URL) is the second part

        // Check if the command is 'go'
        if (command === 'go') {
            if (argument) {
                // If there is a URL, navigate to it
                window.location.href = argument;
                // You might not want a new line if the page changes,
                // but we'll add one for consistency.
            } else {
                // If no URL is provided, show an error message
                const errorLine = document.createElement('div');
                errorLine.classList.add('terminal-line');
                errorLine.textContent = 'go: missing destination';
                terminalBody.appendChild(errorLine);
            }
        } else if (commandText) {
             // Handle unknown commands
            const unknownCmdLine = document.createElement('div');
            unknownCmdLine.classList.add('terminal-line');
            unknownCmdLine.textContent = `command not found: ${commandText}`;
            terminalBody.appendChild(unknownCmdLine);
        }


        // Add a new line for the next command
        const newLine = document.createElement('div');
        newLine.classList.add('terminal-line');
        newLine.innerHTML = '<span class="prompt">$</span> <span contenteditable="true" class="terminal-input"></span>';

        terminalBody.appendChild(newLine);
        // Focus on the new input field
        newLine.querySelector('.terminal-input').focus();
    }
});